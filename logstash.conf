input {
    tcp { # celery tasks logs
        port => 5000
        tags => ["celery"]
    }
    tcp { # uwsgi app logs
        port => 5001
        tags => ["uwsgi"]
    }
}

filter {
    grok {
        match => {
            "message" => "(?:%{SYSLOGTIMESTAMP})(?: %{SYSLOGPROG}:)? %{GREEDYDATA:msg}"
        }
    }
    mutate {
        rename => ["msg", "message"]
        # clean up unnecessary syslog info
        remove_field => ["pid", "port", "program", "host"]
    }
    json {
        source => "message"
        target => "json_log"
    }

    # habdle loguru logs TODO: check for can be grok fails here
    if "_grokparsefailure" not in [tags] and "_jsonparsefailure" not in [tags]{
        # clean up event
        mutate {
            rename => ["[json_log][record]", "record"]
            rename => ["[record][message]", "message"]
            remove_field => "json_log"
        }
        # set log itself timestamp as @timestamp
        date {
            match => ["[record][time][timestamp]", "UNIX"]
            remove_field => ["[record][time]"]
        }
        if "celery" in [tags] {
            mutate {
                add_tag => ["tasks"]
            }
        }
        else if "uwsgi" in [tags] {
            mutate {
                add_tag => ["api"]
            }
        }
    }

    # handle built-in logs of celery or uwsgi(django may be too)
    else {
        if "celery" in [tags] {
            grok {
                match => {
                    "message" => "%{TIMESTAMP_ISO8601:timestamp}: %{LOGLEVEL:loglevel}/%{DATA}] (?:%{GREEDYDATA:msg})"
                }
            }
            date {
                match => ["timestamp", "ISO8601"]
                remove_field => "timestamp"
            }
        }
        else if "uwsgi" in [tags] {
            grok {
                match => {
                    "message" => "^(?:.* \[%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}\] )?%{GREEDYDATA:msg}"
                }
            }
        }
        else {
            drop {}
        }

        mutate {
            rename => ["msg", "message"]
        }
    }
}

output {
    if "tasks" in [tags] and [record] {
        elasticsearch {
            hosts => "elasticsearch"
            data_stream => "false"
            index => "tuvermind.tasks-%{+yyyy.MM.dd}"
        }
    }
    else if "api" in [tags] and [record] {
        elasticsearch {
            hosts => "elasticsearch"
            data_stream => "false"
            index => "tuvermind.api-%{+yyyy.MM.dd}"
        }
    }
    else if "celery" in [tags] {
        elasticsearch {
            hosts => "elasticsearch"
            data_stream => "false"
            index => "tuvermind.celery-%{+yyyy.MM.dd}"
        }
    }
    else if "uwsgi" in [tags] {
        elasticsearch {
            hosts => "elasticsearch"
            data_stream => "false"
            index => "tuvermind.uwsgi-%{+yyyy.MM.dd}"
        }
    }
    stdout {}
}